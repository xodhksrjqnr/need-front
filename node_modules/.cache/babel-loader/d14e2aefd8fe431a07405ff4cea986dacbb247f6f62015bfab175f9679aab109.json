{"ast":null,"code":"var _jsxFileName = \"/Users/taewan/Desktop/my/toyProject/need/client_front_server/src/component/js/PostList.js\",\n  _s = $RefreshSig$();\nimport '../css/post-list.css';\nimport { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport { useInView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList(_ref) {\n  _s();\n  let {\n    postListApi\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const postNum = useRef(0);\n  const nextExist = useRef(true);\n  const prePostListApi = useRef('http://localhost:8080/posts?');\n  let [ref, inView] = useInView({\n    threshold: 0.2\n  });\n  const [flag, setFlag] = useState(true);\n  useEffect(() => {\n    if (prePostListApi.current !== postListApi) {\n      console.log(\"api\");\n      setPosts([]);\n      nextExist.current = true;\n      prePostListApi.current = postListApi;\n      setFlag(!flag);\n      inView = false;\n    }\n  }, [postListApi]);\n  useEffect(() => {\n    if (inView && nextExist.current) {\n      console.log(\"view\");\n      axios.get(postListApi + \"offset=\" + postNum.current).then(response => {\n        const arrPost = [];\n        const curDate = new Date();\n        const len = response.data.length;\n        response.data.forEach(p => {\n          if (curDate < new Date(p.closingDate)) arrPost.push(p);\n        });\n        setPosts(prevPosts => prevPosts.concat(arrPost));\n        postNum.current += len;\n        if (len !== 20) {\n          nextExist.current = false;\n        }\n      });\n    }\n  }, [inView, flag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postList\",\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.postId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      id: \"postListEndPoint\",\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(PostList, \"JXqtk6REVex1Nd9QYqMqSicHIyM=\", false, function () {\n  return [useInView];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","Post","useInView","jsxDEV","_jsxDEV","PostList","_ref","_s","postListApi","posts","setPosts","postNum","nextExist","prePostListApi","ref","inView","threshold","flag","setFlag","current","console","log","get","then","response","arrPost","curDate","Date","len","data","length","forEach","p","closingDate","push","prevPosts","concat","className","children","map","post","postId","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/taewan/Desktop/my/toyProject/need/client_front_server/src/component/js/PostList.js"],"sourcesContent":["import '../css/post-list.css';\nimport {useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport { useInView } from 'react-intersection-observer';\n\nfunction PostList({postListApi}) {\n    const [posts, setPosts] = useState([]);\n    const postNum = useRef(0);\n    const nextExist = useRef(true);\n    const prePostListApi = useRef('http://localhost:8080/posts?');\n    let [ref, inView] = useInView({threshold:0.2});\n    const [flag, setFlag] = useState(true);\n\n    useEffect(() => {\n        if (prePostListApi.current !== postListApi) {\n            console.log(\"api\");\n            setPosts([]);\n            nextExist.current = true;\n            prePostListApi.current = postListApi;\n            setFlag(!flag);\n            inView = false;\n        }\n    }, [postListApi])\n\n    useEffect(() => {\n        if ((inView && nextExist.current)) {\n            console.log(\"view\");\n            axios.get(postListApi + \"offset=\" + postNum.current)\n                .then((response) => {\n                    const arrPost = [];\n                    const curDate = new Date();\n                    const len = response.data.length;\n\n                    response.data.forEach(p => {\n                        if (curDate < new Date(p.closingDate))\n                            arrPost.push(p)\n                    });\n                    setPosts(prevPosts => prevPosts.concat(arrPost));\n                    postNum.current += len;\n                    if (len !== 20) {\n                        nextExist.current = false;\n                    }\n            });\n        }\n    }, [inView, flag]);\n\n    return (\n        <div className=\"postList\">\n            {posts.map(post => <Post key={post.postId} post={post}/>)}\n            <div ref={ref} id=\"postListEndPoint\">test</div>\n        </div>\n    )\n}\n\nexport default PostList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}